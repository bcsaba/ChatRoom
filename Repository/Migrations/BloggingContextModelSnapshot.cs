// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(BloggingContext))]
    partial class BloggingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Repository.ChatRoom", b =>
                {
                    b.Property<int>("ChatRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChatRoomId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChatRoomId");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("Repository.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PostId"));

                    b.Property<int>("BlogId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserBlogId")
                        .HasColumnType("integer");

                    b.HasKey("PostId");

                    b.HasIndex("UserBlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Repository.RoomEvent", b =>
                {
                    b.Property<int>("RoomEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomEventId"));

                    b.Property<int?>("ChatRoomId")
                        .HasColumnType("integer");

                    b.Property<int>("EventTypeRoomEventTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("UserBlogId")
                        .HasColumnType("integer");

                    b.HasKey("RoomEventId");

                    b.HasIndex("ChatRoomId");

                    b.HasIndex("EventTypeRoomEventTypeId");

                    b.HasIndex("UserBlogId");

                    b.ToTable("RoomEvent");
                });

            modelBuilder.Entity("Repository.RoomEventType", b =>
                {
                    b.Property<int>("RoomEventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomEventTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoomEventTypeId");

                    b.ToTable("RoomEventTypes");
                });

            modelBuilder.Entity("Repository.User", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BlogId"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Repository.Post", b =>
                {
                    b.HasOne("Repository.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserBlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Repository.RoomEvent", b =>
                {
                    b.HasOne("Repository.ChatRoom", null)
                        .WithMany("RoomEvents")
                        .HasForeignKey("ChatRoomId");

                    b.HasOne("Repository.RoomEventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeRoomEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.User", "User")
                        .WithMany()
                        .HasForeignKey("UserBlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Repository.ChatRoom", b =>
                {
                    b.Navigation("RoomEvents");
                });

            modelBuilder.Entity("Repository.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
